# TrendXL 2.0 - Optimized Backend for Railway
# Python FastAPI + Uvicorn

# ============================================
# Base Image: Python 3.10 Slim
# ============================================
FROM python:3.10-slim-bullseye

# Metadata
LABEL maintainer="TrendXL Team"
LABEL description="TrendXL 2.0 Backend API - FastAPI Service"

# Set Python environment variables for optimal performance
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    PYTHONPATH=/app/backend \
    PYTHONIOENCODING=utf-8

WORKDIR /app/backend

# Install system dependencies (minimal set)
# gcc, g++ needed for some Python packages (bcrypt, cryptography)
RUN apt-get update && apt-get install -y \
    --no-install-recommends \
    build-essential \
    gcc \
    g++ \
    curl \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Copy requirements first (better layer caching)
COPY backend/requirements.txt ./

# Upgrade pip and install Python dependencies
RUN pip install --no-cache-dir --upgrade pip setuptools wheel \
    && pip install --no-cache-dir -r requirements.txt

# Verify critical packages are installed
RUN python -c "import fastapi; import uvicorn; import openai; import ensembledata; print('âœ… All dependencies installed')"

# Copy backend application code
COPY backend/ ./

# Create non-root user for security
RUN useradd -m -u 1000 trendxl && \
    chown -R trendxl:trendxl /app && \
    mkdir -p /app/backend/logs && \
    chown -R trendxl:trendxl /app/backend/logs

# Switch to non-root user
USER trendxl

# Expose port (Railway will dynamically set PORT env var)
EXPOSE 8000

# Health check - Railway has its own, but this is a good fallback
# Increased start-period to allow for API key validation and startup
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:${PORT:-8000}/health || exit 1

# Start backend server with run_server.py
# This script reads PORT from environment (Railway provides it)
CMD ["python", "run_server.py"]
